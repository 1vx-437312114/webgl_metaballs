var quadVertexShaderStr="attribute vec2 vertex_position;\nvoid main(void)\n{\nvec4 vpos = vec4(vertex_position, 0.0, 1.0); gl_Position = vpos;\n}",quadSkyFragmentShaderStr="\nprecision mediump float;\nuniform float iGlobalTime;\nuniform vec3 iResolution;\nfloat hash(float x)\n{\nreturn fract(sin(x * 0.0127863) * 17143.321);\n}\nfloat hash(vec2 x)\n{\nreturn fract(cos(dot(x.xy,vec2(2.31, 53.21)) * 124.123) * 412.0);\n}\nvec3 cc(vec3 color, float factor, float factor2)\n{\nfloat w = color.x + color.y + color.z;\nreturn mix(color, vec3(w) * factor, w * factor2);\n}\nfloat hashmix(float x0, float x1, float interp)\n{\nx0 = hash(x0);\nx1 = hash(x1);\nreturn mix(x0, x1, interp);\n}\nfloat noise(float p)\n{\nfloat pm = mod(p, 1.0);\nfloat pd = p-pm;\nreturn hashmix(pd, pd  + 1.0, pm);\n}\nvec3 background(vec3 d)\n{\nvec3 light = vec3(0.19245, 0.96225, -0.19245); //normalize(vec3(0.2, 1.0 , -0.2));\nfloat t = iGlobalTime * 0.5;\nfloat qq = dot(d, light) * 0.5 + 0.5;\nfloat bgl = qq;\nfloat q = (bgl + noise(bgl * 6.0 + t) * 0.85 + noise(bgl * 12.0 + t) * 0.85);\nq+= pow(qq, 32.0) * 2.0;\nvec3 sky = vec3(0.1, 0.4, 0.6) * q;\nreturn sky;\n}\nvoid main()\n{\nvec2 uv = gl_FragCoord.xy / iResolution.xy - 0.5;\nuv.x *= iResolution.x / iResolution.y;\nvec3 d = vec3(uv, 1.0);\nd.z -= length(d)* 0.5;\nd = normalize(d);\nconst float ca = 0.96891242;\nconst float sa = -0.24740395;\nconst mat3 rotX = mat3(+ 1.0, +0.0, +0.0, +0.0, +0.96891242, +0.24740395, +0.0, -0.24740395, +0.96891242);\nd = d * rotX;\nconst mat3 rotY = mat3(-0.83907152, + 0.0, +0.5440211, +0.0, +1.0, +0.0, -0.5440211, +0.0, -0.83907152);\nd = d * rotY;\nvec3 color = background(d);\ncolor *= 0.85; color = mix(color, color * color, 0.3); color -= hash(color.xy + uv.xy) * 0.015;\ncolor -= length(uv) * 0.1;color =cc(color, 0.5, 0.6);\ngl_FragColor = vec4(color, 1.0);\n}",quadSunFragmentShaderStr="precision mediump float;\n#define brightness 1.5\n#define ray_brightness 10.0\n#define gamma 8.0\n#define spot_brightness 15.0\n#define ray_density 3.5\n#define curvature 15.0\n#define red   4.0\n#define green 1.0\n#define blue  0.1\n#define noisetype 1\n#define sin_freq 13.0\nuniform float iGlobalTime;\nuniform vec3 iResolution;\nfloat hash( float n )\n{\nreturn fract(sin(n) * 43758.5453);\n}\nfloat noise( in vec2 x )\n{\nx *= 1.75;\nvec2 p = floor(x);\nvec2 f = fract(x);\nf = f * f * (3.0 - 2.0 * f);\nfloat n = p.x + p.y * 57.0;\nfloat res = mix(mix( hash(n +  0.0), hash(n +  1.0), f.x),\nmix( hash(n + 57.0), hash(n + 58.0), f.x), f.y);\nreturn res;\n}\nmat2 m2 = mat2( 0.80,  0.60, -0.60,  0.80 );\nfloat fbm(in vec2 p)\n{\t\nfloat z = 2.0;\nfloat rz = 0.0;\np *= 0.25;\nfor (float i= 1.0;i < 6.0;i++)\n{\nrz+= abs((noise(p)  -0.5) * 2.0) / z;                    \nz = z * 2.0;\np = p * 2.0 * m2;\n}\nreturn rz;\n}\nvoid main()\n{\nfloat t = -iGlobalTime * 0.1;\nvec2 uv = gl_FragCoord.xy / iResolution.xy - 0.5;\nuv.x *= iResolution.x / iResolution.y;\nuv*= curvature * 0.05 + 0.0001;   \nfloat r  = sqrt(dot(uv, uv));\nfloat x = dot(normalize(uv), vec2(0.5, 0.0)) + t;\t\nfloat y = dot(normalize(uv), vec2(0.0, 0.5)) + t;\nfloat val;\nval = fbm(vec2(r + y * ray_density, r + x * ray_density - y));\nval = smoothstep(gamma * 0.02 - 0.1, ray_brightness + (gamma * 0.02 - 0.1) + 0.001, val);\nval = sqrt(val);\nvec3 col = val / vec3(red, green, blue);\ncol = clamp(1.0 - col, 0.0, 1.0);\ncol = mix(col, vec3(1.0), spot_brightness - r / 0.1 / curvature * 200.0 / brightness);\ngl_FragColor = vec4(col, 1.0);\n}",quadBubbleFragmentShaderStr="precision mediump float;\nuniform float iGlobalTime;\nuniform vec3 iResolution;\nvoid main()\n{\nvec2 uv = -1.0 + 2.0 * gl_FragCoord.xy / iResolution.xy;\nuv.x *= iResolution.x / iResolution.y;\nvec3 color = vec3(0.8 + 0.2 * uv.y);\nfor (int i= 0; i < 15; i++ )\n{\nfloat pha = sin(float(i) * 546.13 + 1.0) * 0.5 + 0.5;\nfloat siz = pow(sin(float(i) * 651.74 + 5.0) * 0.5 + 0.5, 4.0);\nfloat pox = sin(float(i) * 321.55 + 4.1) * iResolution.x / iResolution.y;\nfloat rad = 0.1 + 0.5 * siz;\nvec2  pos = vec2(pox, -1.0 - rad + (2.0 + 2.0 * rad) * mod(pha + 0.1 * iGlobalTime / 1.0 * (0.2 + 0.8 * siz), 1.0));\nfloat dis = length(uv - pos);\nvec3  col = mix(vec3(0.4, 0.1, 0.4), vec3(0.6, 0.2, 0.6), 0.5 + 0.5 * sin(float(i) * 1.2 + 1.9));\nfloat f = length(uv - pos) / rad;\nf = sqrt(clamp(1.0 - f * f, 0.0, 1.0));\ncolor -= col.xyz * (1.0 - smoothstep(rad * 0.95, rad, dis)) * f;\n}\ncolor *= sqrt(1.5 - 0.5 * length(uv));\ngl_FragColor = vec4(color, 1.0);}",metaballsVertexShaderStr="uniform mat4 modelViewProjectionMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat3 normalMatrix;\nattribute vec3 vertex_position;\nattribute vec3 vertex_normal;\nvarying vec2 texCoord;\nvoid main()\n{\nvec4 vpos = vec4(vertex_position, 1.0);\ngl_Position = modelViewProjectionMatrix * vpos;\nvec3 u = normalize(vec3(modelViewMatrix * vpos ));\nvec3 n = normalize(normalMatrix * vertex_normal);\nvec3 r = reflect(u, n);\nfloat m = 2.0 * sqrt(r.x * r.x + r.y * r.y + (r.z + 1.0) * (r.z + 1.0));\ntexCoord.x = r.x / m + 0.5;\ntexCoord.y = r.y / m + 0.5;\n}",metaballsFragmentShaderStr="precision mediump float;\n#define VIG_REDUCTION_POWER 1.\n#define VIG_BOOST 1.\nuniform sampler2D envMap;\nvarying vec2 texCoord;\nfloat random(vec3 scale, float seed)\n{\nreturn fract(sin(dot(gl_FragCoord.xyz + seed, scale)) * 43758.5453 + seed);\n}\nvoid main(void)\n{\nvec4 env = texture2D(envMap, texCoord);\ngl_FragColor = env;\n}",degToRad=Math.PI/180,GRIDSIZE=40,GRIDSIZE2=GRIDSIZE*GRIDSIZE,edgeTable=new Uint16Array([0,265,515,778,1030,1295,1541,1804,2060,2309,2575,2822,3082,3331,3593,3840,400,153,915,666,1430,1183,1941,1692,2460,2197,2975,2710,3482,3219,3993,3728,560,825,51,314,1590,1855,1077,1340,2620,2869,2111,2358,3642,3891,3129,3376,928,681,419,170,1958,1711,1445,1196,2988,2725,2479,2214,4010,3747,3497,3232,1120,1385,1635,1898,102,367,613,876,3180,3429,3695,3942,2154,2403,2665,2912,1520,1273,2035,1786,502,255,1013,764,3580,3317,4095,3830,2554,2291,3065,2800,1616,1881,1107,1370,598,863,85,348,3676,3925,3167,3414,2650,2899,2137,2384,1984,1737,1475,1226,966,719,453,204,4044,3781,3535,3270,3018,2755,2505,2240,2240,2505,2755,3018,3270,3535,3781,4044,204,453,719,966,1226,1475,1737,1984,2384,2137,2899,2650,3414,3167,3925,3676,348,85,863,598,1370,1107,1881,1616,2800,3065,2291,2554,3830,4095,3317,3580,764,1013,255,502,1786,2035,1273,1520,2912,2665,2403,2154,3942,3695,3429,3180,876,613,367,102,1898,1635,1385,1120,3232,3497,3747,4010,2214,2479,2725,2988,1196,1445,1711,1958,170,419,681,928,3376,3129,3891,3642,2358,2111,2869,2620,1340,1077,1855,1590,314,51,825,560,3728,3993,3219,3482,2710,2975,2197,2460,1692,1941,1183,1430,666,915,153,400,3840,3593,3331,3082,2822,2575,2309,2060,1804,1541,1295,1030,778,515,265,0]),numEntryTable=new Uint8Array([0,3,3,6,3,6,6,9,3,6,6,9,6,9,9,6,3,6,6,9,6,9,9,12,6,9,9,12,9,12,12,9,3,6,6,9,6,9,9,12,6,9,9,12,9,12,12,9,6,9,9,6,9,12,12,9,9,12,12,9,12,15,15,6,3,6,6,9,6,9,9,12,6,9,9,12,9,12,12,9,6,9,9,12,9,12,12,15,9,12,12,15,12,15,15,12,6,9,9,12,9,12,6,9,9,12,12,15,12,15,9,6,9,12,12,9,12,15,9,6,12,15,15,12,15,6,12,3,3,6,6,9,6,9,9,12,6,9,9,12,9,12,12,9,6,9,9,12,9,12,12,15,9,6,12,9,12,9,15,6,6,9,9,12,9,12,12,15,9,12,12,15,12,15,15,12,9,12,12,9,12,15,15,12,12,9,15,6,15,12,6,3,6,9,9,12,9,12,12,15,9,12,12,15,6,9,9,6,9,12,12,15,12,15,15,6,12,9,15,12,9,6,12,3,9,12,12,15,12,15,9,12,12,15,15,6,9,12,6,3,6,9,9,6,9,12,6,3,9,6,12,3,6,3,3,0]),triangleTable=new Int8Array([-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,8,3,9,8,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,2,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,1,2,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,2,10,0,2,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,8,3,2,10,8,10,9,8,-1,-1,-1,-1,-1,-1,-1,3,11,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,11,2,8,11,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,9,0,2,3,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,11,2,1,9,11,9,8,11,-1,-1,-1,-1,-1,-1,-1,3,10,1,11,10,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,10,1,0,8,10,8,11,10,-1,-1,-1,-1,-1,-1,-1,3,9,0,3,11,9,11,10,9,-1,-1,-1,-1,-1,-1,-1,9,8,10,10,8,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,3,0,7,3,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,9,8,4,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,1,9,4,7,1,7,3,1,-1,-1,-1,-1,-1,-1,-1,1,2,10,8,4,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,4,7,3,0,4,1,2,10,-1,-1,-1,-1,-1,-1,-1,9,2,10,9,0,2,8,4,7,-1,-1,-1,-1,-1,-1,-1,2,10,9,2,9,7,2,7,3,7,9,4,-1,-1,-1,-1,8,4,7,3,11,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,4,7,11,2,4,2,0,4,-1,-1,-1,-1,-1,-1,-1,9,0,1,8,4,7,2,3,11,-1,-1,-1,-1,-1,-1,-1,4,7,11,9,4,11,9,11,2,9,2,1,-1,-1,-1,-1,3,10,1,3,11,10,7,8,4,-1,-1,-1,-1,-1,-1,-1,1,11,10,1,4,11,1,0,4,7,11,4,-1,-1,-1,-1,4,7,8,9,0,11,9,11,10,11,0,3,-1,-1,-1,-1,4,7,11,4,11,9,9,11,10,-1,-1,-1,-1,-1,-1,-1,9,5,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,5,4,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,5,4,1,5,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,5,4,8,3,5,3,1,5,-1,-1,-1,-1,-1,-1,-1,1,2,10,9,5,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,0,8,1,2,10,4,9,5,-1,-1,-1,-1,-1,-1,-1,5,2,10,5,4,2,4,0,2,-1,-1,-1,-1,-1,-1,-1,2,10,5,3,2,5,3,5,4,3,4,8,-1,-1,-1,-1,9,5,4,2,3,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,11,2,0,8,11,4,9,5,-1,-1,-1,-1,-1,-1,-1,0,5,4,0,1,5,2,3,11,-1,-1,-1,-1,-1,-1,-1,2,1,5,2,5,8,2,8,11,4,8,5,-1,-1,-1,-1,10,3,11,10,1,3,9,5,4,-1,-1,-1,-1,-1,-1,-1,4,9,5,0,8,1,8,10,1,8,11,10,-1,-1,-1,-1,5,4,0,5,0,11,5,11,10,11,0,3,-1,-1,-1,-1,5,4,8,5,8,10,10,8,11,-1,-1,-1,-1,-1,-1,-1,9,7,8,5,7,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,3,0,9,5,3,5,7,3,-1,-1,-1,-1,-1,-1,-1,0,7,8,0,1,7,1,5,7,-1,-1,-1,-1,-1,-1,-1,1,5,3,3,5,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,7,8,9,5,7,10,1,2,-1,-1,-1,-1,-1,-1,-1,10,1,2,9,5,0,5,3,0,5,7,3,-1,-1,-1,-1,8,0,2,8,2,5,8,5,7,10,5,2,-1,-1,-1,-1,2,10,5,2,5,3,3,5,7,-1,-1,-1,-1,-1,-1,-1,7,9,5,7,8,9,3,11,2,-1,-1,-1,-1,-1,-1,-1,9,5,7,9,7,2,9,2,0,2,7,11,-1,-1,-1,-1,2,3,11,0,1,8,1,7,8,1,5,7,-1,-1,-1,-1,11,2,1,11,1,7,7,1,5,-1,-1,-1,-1,-1,-1,-1,9,5,8,8,5,7,10,1,3,10,3,11,-1,-1,-1,-1,5,7,0,5,0,9,7,11,0,1,0,10,11,10,0,-1,11,10,0,11,0,3,10,5,0,8,0,7,5,7,0,-1,11,10,5,7,11,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,10,6,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,5,10,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,0,1,5,10,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,8,3,1,9,8,5,10,6,-1,-1,-1,-1,-1,-1,-1,1,6,5,2,6,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,6,5,1,2,6,3,0,8,-1,-1,-1,-1,-1,-1,-1,9,6,5,9,0,6,0,2,6,-1,-1,-1,-1,-1,-1,-1,5,9,8,5,8,2,5,2,6,3,2,8,-1,-1,-1,-1,2,3,11,10,6,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,0,8,11,2,0,10,6,5,-1,-1,-1,-1,-1,-1,-1,0,1,9,2,3,11,5,10,6,-1,-1,-1,-1,-1,-1,-1,5,10,6,1,9,2,9,11,2,9,8,11,-1,-1,-1,-1,6,3,11,6,5,3,5,1,3,-1,-1,-1,-1,-1,-1,-1,0,8,11,0,11,5,0,5,1,5,11,6,-1,-1,-1,-1,3,11,6,0,3,6,0,6,5,0,5,9,-1,-1,-1,-1,6,5,9,6,9,11,11,9,8,-1,-1,-1,-1,-1,-1,-1,5,10,6,4,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,3,0,4,7,3,6,5,10,-1,-1,-1,-1,-1,-1,-1,1,9,0,5,10,6,8,4,7,-1,-1,-1,-1,-1,-1,-1,10,6,5,1,9,7,1,7,3,7,9,4,-1,-1,-1,-1,6,1,2,6,5,1,4,7,8,-1,-1,-1,-1,-1,-1,-1,1,2,5,5,2,6,3,0,4,3,4,7,-1,-1,-1,-1,8,4,7,9,0,5,0,6,5,0,2,6,-1,-1,-1,-1,7,3,9,7,9,4,3,2,9,5,9,6,2,6,9,-1,3,11,2,7,8,4,10,6,5,-1,-1,-1,-1,-1,-1,-1,5,10,6,4,7,2,4,2,0,2,7,11,-1,-1,-1,-1,0,1,9,4,7,8,2,3,11,5,10,6,-1,-1,-1,-1,9,2,1,9,11,2,9,4,11,7,11,4,5,10,6,-1,8,4,7,3,11,5,3,5,1,5,11,6,-1,-1,-1,-1,5,1,11,5,11,6,1,0,11,7,11,4,0,4,11,-1,0,5,9,0,6,5,0,3,6,11,6,3,8,4,7,-1,6,5,9,6,9,11,4,7,9,7,11,9,-1,-1,-1,-1,10,4,9,6,4,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,10,6,4,9,10,0,8,3,-1,-1,-1,-1,-1,-1,-1,10,0,1,10,6,0,6,4,0,-1,-1,-1,-1,-1,-1,-1,8,3,1,8,1,6,8,6,4,6,1,10,-1,-1,-1,-1,1,4,9,1,2,4,2,6,4,-1,-1,-1,-1,-1,-1,-1,3,0,8,1,2,9,2,4,9,2,6,4,-1,-1,-1,-1,0,2,4,4,2,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,3,2,8,2,4,4,2,6,-1,-1,-1,-1,-1,-1,-1,10,4,9,10,6,4,11,2,3,-1,-1,-1,-1,-1,-1,-1,0,8,2,2,8,11,4,9,10,4,10,6,-1,-1,-1,-1,3,11,2,0,1,6,0,6,4,6,1,10,-1,-1,-1,-1,6,4,1,6,1,10,4,8,1,2,1,11,8,11,1,-1,9,6,4,9,3,6,9,1,3,11,6,3,-1,-1,-1,-1,8,11,1,8,1,0,11,6,1,9,1,4,6,4,1,-1,3,11,6,3,6,0,0,6,4,-1,-1,-1,-1,-1,-1,-1,6,4,8,11,6,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,10,6,7,8,10,8,9,10,-1,-1,-1,-1,-1,-1,-1,0,7,3,0,10,7,0,9,10,6,7,10,-1,-1,-1,-1,10,6,7,1,10,7,1,7,8,1,8,0,-1,-1,-1,-1,10,6,7,10,7,1,1,7,3,-1,-1,-1,-1,-1,-1,-1,1,2,6,1,6,8,1,8,9,8,6,7,-1,-1,-1,-1,2,6,9,2,9,1,6,7,9,0,9,3,7,3,9,-1,7,8,0,7,0,6,6,0,2,-1,-1,-1,-1,-1,-1,-1,7,3,2,6,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,3,11,10,6,8,10,8,9,8,6,7,-1,-1,-1,-1,2,0,7,2,7,11,0,9,7,6,7,10,9,10,7,-1,1,8,0,1,7,8,1,10,7,6,7,10,2,3,11,-1,11,2,1,11,1,7,10,6,1,6,7,1,-1,-1,-1,-1,8,9,6,8,6,7,9,1,6,11,6,3,1,3,6,-1,0,9,1,11,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,8,0,7,0,6,3,11,0,11,6,0,-1,-1,-1,-1,7,11,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,6,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,0,8,11,7,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,9,11,7,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,1,9,8,3,1,11,7,6,-1,-1,-1,-1,-1,-1,-1,10,1,2,6,11,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,2,10,3,0,8,6,11,7,-1,-1,-1,-1,-1,-1,-1,2,9,0,2,10,9,6,11,7,-1,-1,-1,-1,-1,-1,-1,6,11,7,2,10,3,10,8,3,10,9,8,-1,-1,-1,-1,7,2,3,6,2,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,0,8,7,6,0,6,2,0,-1,-1,-1,-1,-1,-1,-1,2,7,6,2,3,7,0,1,9,-1,-1,-1,-1,-1,-1,-1,1,6,2,1,8,6,1,9,8,8,7,6,-1,-1,-1,-1,10,7,6,10,1,7,1,3,7,-1,-1,-1,-1,-1,-1,-1,10,7,6,1,7,10,1,8,7,1,0,8,-1,-1,-1,-1,0,3,7,0,7,10,0,10,9,6,10,7,-1,-1,-1,-1,7,6,10,7,10,8,8,10,9,-1,-1,-1,-1,-1,-1,-1,6,8,4,11,8,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,6,11,3,0,6,0,4,6,-1,-1,-1,-1,-1,-1,-1,8,6,11,8,4,6,9,0,1,-1,-1,-1,-1,-1,-1,-1,9,4,6,9,6,3,9,3,1,11,3,6,-1,-1,-1,-1,6,8,4,6,11,8,2,10,1,-1,-1,-1,-1,-1,-1,-1,1,2,10,3,0,11,0,6,11,0,4,6,-1,-1,-1,-1,4,11,8,4,6,11,0,2,9,2,10,9,-1,-1,-1,-1,10,9,3,10,3,2,9,4,3,11,3,6,4,6,3,-1,8,2,3,8,4,2,4,6,2,-1,-1,-1,-1,-1,-1,-1,0,4,2,4,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,9,0,2,3,4,2,4,6,4,3,8,-1,-1,-1,-1,1,9,4,1,4,2,2,4,6,-1,-1,-1,-1,-1,-1,-1,8,1,3,8,6,1,8,4,6,6,10,1,-1,-1,-1,-1,10,1,0,10,0,6,6,0,4,-1,-1,-1,-1,-1,-1,-1,4,6,3,4,3,8,6,10,3,0,3,9,10,9,3,-1,10,9,4,6,10,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,9,5,7,6,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,4,9,5,11,7,6,-1,-1,-1,-1,-1,-1,-1,5,0,1,5,4,0,7,6,11,-1,-1,-1,-1,-1,-1,-1,11,7,6,8,3,4,3,5,4,3,1,5,-1,-1,-1,-1,9,5,4,10,1,2,7,6,11,-1,-1,-1,-1,-1,-1,-1,6,11,7,1,2,10,0,8,3,4,9,5,-1,-1,-1,-1,7,6,11,5,4,10,4,2,10,4,0,2,-1,-1,-1,-1,3,4,8,3,5,4,3,2,5,10,5,2,11,7,6,-1,7,2,3,7,6,2,5,4,9,-1,-1,-1,-1,-1,-1,-1,9,5,4,0,8,6,0,6,2,6,8,7,-1,-1,-1,-1,3,6,2,3,7,6,1,5,0,5,4,0,-1,-1,-1,-1,6,2,8,6,8,7,2,1,8,4,8,5,1,5,8,-1,9,5,4,10,1,6,1,7,6,1,3,7,-1,-1,-1,-1,1,6,10,1,7,6,1,0,7,8,7,0,9,5,4,-1,4,0,10,4,10,5,0,3,10,6,10,7,3,7,10,-1,7,6,10,7,10,8,5,4,10,4,8,10,-1,-1,-1,-1,6,9,5,6,11,9,11,8,9,-1,-1,-1,-1,-1,-1,-1,3,6,11,0,6,3,0,5,6,0,9,5,-1,-1,-1,-1,0,11,8,0,5,11,0,1,5,5,6,11,-1,-1,-1,-1,6,11,3,6,3,5,5,3,1,-1,-1,-1,-1,-1,-1,-1,1,2,10,9,5,11,9,11,8,11,5,6,-1,-1,-1,-1,0,11,3,0,6,11,0,9,6,5,6,9,1,2,10,-1,11,8,5,11,5,6,8,0,5,10,5,2,0,2,5,-1,6,11,3,6,3,5,2,10,3,10,5,3,-1,-1,-1,-1,5,8,9,5,2,8,5,6,2,3,8,2,-1,-1,-1,-1,9,5,6,9,6,0,0,6,2,-1,-1,-1,-1,-1,-1,-1,1,5,8,1,8,0,5,6,8,3,8,2,6,2,8,-1,1,5,6,2,1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,3,6,1,6,10,3,8,6,5,6,9,8,9,6,-1,10,1,0,10,0,6,9,5,0,5,6,0,-1,-1,-1,-1,0,3,8,5,6,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,10,5,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,5,10,7,5,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,5,10,11,7,5,8,3,0,-1,-1,-1,-1,-1,-1,-1,5,11,7,5,10,11,1,9,0,-1,-1,-1,-1,-1,-1,-1,10,7,5,10,11,7,9,8,1,8,3,1,-1,-1,-1,-1,11,1,2,11,7,1,7,5,1,-1,-1,-1,-1,-1,-1,-1,0,8,3,1,2,7,1,7,5,7,2,11,-1,-1,-1,-1,9,7,5,9,2,7,9,0,2,2,11,7,-1,-1,-1,-1,7,5,2,7,2,11,5,9,2,3,2,8,9,8,2,-1,2,5,10,2,3,5,3,7,5,-1,-1,-1,-1,-1,-1,-1,8,2,0,8,5,2,8,7,5,10,2,5,-1,-1,-1,-1,9,0,1,5,10,3,5,3,7,3,10,2,-1,-1,-1,-1,9,8,2,9,2,1,8,7,2,10,2,5,7,5,2,-1,1,3,5,3,7,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,7,0,7,1,1,7,5,-1,-1,-1,-1,-1,-1,-1,9,0,3,9,3,5,5,3,7,-1,-1,-1,-1,-1,-1,-1,9,8,7,5,9,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,8,4,5,10,8,10,11,8,-1,-1,-1,-1,-1,-1,-1,5,0,4,5,11,0,5,10,11,11,3,0,-1,-1,-1,-1,0,1,9,8,4,10,8,10,11,10,4,5,-1,-1,-1,-1,10,11,4,10,4,5,11,3,4,9,4,1,3,1,4,-1,2,5,1,2,8,5,2,11,8,4,5,8,-1,-1,-1,-1,0,4,11,0,11,3,4,5,11,2,11,1,5,1,11,-1,0,2,5,0,5,9,2,11,5,4,5,8,11,8,5,-1,9,4,5,2,11,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,5,10,3,5,2,3,4,5,3,8,4,-1,-1,-1,-1,5,10,2,5,2,4,4,2,0,-1,-1,-1,-1,-1,-1,-1,3,10,2,3,5,10,3,8,5,4,5,8,0,1,9,-1,5,10,2,5,2,4,1,9,2,9,4,2,-1,-1,-1,-1,8,4,5,8,5,3,3,5,1,-1,-1,-1,-1,-1,-1,-1,0,4,5,1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,4,5,8,5,3,9,0,5,0,3,5,-1,-1,-1,-1,9,4,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,11,7,4,9,11,9,10,11,-1,-1,-1,-1,-1,-1,-1,0,8,3,4,9,7,9,11,7,9,10,11,-1,-1,-1,-1,1,10,11,1,11,4,1,4,0,7,4,11,-1,-1,-1,-1,3,1,4,3,4,8,1,10,4,7,4,11,10,11,4,-1,4,11,7,9,11,4,9,2,11,9,1,2,-1,-1,-1,-1,9,7,4,9,11,7,9,1,11,2,11,1,0,8,3,-1,11,7,4,11,4,2,2,4,0,-1,-1,-1,-1,-1,-1,-1,11,7,4,11,4,2,8,3,4,3,2,4,-1,-1,-1,-1,2,9,10,2,7,9,2,3,7,7,4,9,-1,-1,-1,-1,9,10,7,9,7,4,10,2,7,8,7,0,2,0,7,-1,3,7,10,3,10,2,7,4,10,1,10,0,4,0,10,-1,1,10,2,8,7,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,9,1,4,1,7,7,1,3,-1,-1,-1,-1,-1,-1,-1,4,9,1,4,1,7,0,8,1,8,7,1,-1,-1,-1,-1,4,0,3,7,4,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,8,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,10,8,10,11,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,0,9,3,9,11,11,9,10,-1,-1,-1,-1,-1,-1,-1,0,1,10,0,10,8,8,10,11,-1,-1,-1,-1,-1,-1,-1,3,1,10,11,3,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,2,11,1,11,9,9,11,8,-1,-1,-1,-1,-1,-1,-1,3,0,9,3,9,11,1,2,9,2,11,9,-1,-1,-1,-1,0,2,11,8,0,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,2,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,3,8,2,8,10,10,8,9,-1,-1,-1,-1,-1,-1,-1,9,10,2,0,9,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,3,8,2,8,10,0,1,8,1,10,8,-1,-1,-1,-1,1,10,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,3,8,9,1,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,9,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,3,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1]),WebGLShaderObject=function(){function a(){}return a}(),WebGLRenderObject=function(){function a(){}return a}(),WebGLApp=function(){function a(){var a=this;this.verticesList=new Float32Array(36),this.normalsList=new Float32Array(36),this.vertdata=new Float32Array(64e3),this.normdata=new Float32Array(64e3),this.lastTime=0,this.elapsedTime=0,this.timeStart=performance.now(),this.grid_position=new Float32Array(GRIDSIZE*GRIDSIZE*GRIDSIZE*3),this.grid_normal=new Float32Array(GRIDSIZE*GRIDSIZE*GRIDSIZE*3),this.grid_value=new Float32Array(GRIDSIZE*GRIDSIZE*GRIDSIZE),this.metaballs_position=new Float32Array([.5,0,0,0,0,0,0,0,0]),this.metaballs_radius=new Float32Array([.3,.22,.25]),this.images=[],this.textureID=[],this.textureNum=0,this.oldTexureNum=0,this.params={scene:"Burning Sun",alternativeMovement:!1,backgroundShader:!0,redMatcap:!1},this.canvas=document.getElementById("webgl_canvas"),this.gl=this.canvas.getContext("experimental-webgl"),this.gl.viewport(this.canvas.offsetTop,this.canvas.offsetLeft,this.canvas.width,this.canvas.height);document.getElementById("container");this.render_width=window.innerWidth,this.render_height=window.innerHeight,this.modelViewMatrix=mat4.create(new Float32Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2.5,1])),this.projectionMatrix=mat4.identity(),this.modelViewProjectionMatrix=mat4.identity(),this.normalMatrix=mat3.identity(),mat4.perspective(60,this.canvas.width/this.canvas.height,.01,400,this.projectionMatrix),this.initGUI(),this.initGL(),this.initGrid(),this.initLists(),this.loadTextures(["textures/matCapFlame.jpg","textures/matcap.jpg","textures/greenglass.jpg","textures/red.jpg"],function(){return a.start()})}return a.prototype.initGUI=function(){var a=this;this.gui=new dat.GUI({width:270});var b=this.gui.addFolder("Scene selection:");b.add(this.params,"scene",["Burning Sun","Blue Sky","Liquid Glass"]).onChange(function(b){"Burning Sun"===b?(a.quadShader=a.quadSunShader,a.textureNum=0,a.oldTexureNum=0,a.params.redMatcap=!1,a.gui.updateDisplay()):"Blue Sky"==b?(a.quadShader=a.quadSkyShader,a.textureNum=1,a.oldTexureNum=1,a.params.redMatcap=!1,a.gui.updateDisplay()):"Liquid Glass"==b&&(a.quadShader=a.quadBubbleShader,a.textureNum=2,a.oldTexureNum=2,a.params.redMatcap=!1,a.gui.updateDisplay())}),b.open(),this.gui.add(this.params,"alternativeMovement").name("Alt. movement"),this.gui.add(this.params,"backgroundShader").name("Background Shader"),this.gui.add(this.params,"redMatcap").name("Red Matcap").onChange(function(b){b?(a.oldTexureNum=a.textureNum,a.textureNum=3,a.gui.updateDisplay()):(a.textureNum=a.oldTexureNum,a.gui.updateDisplay())}),this.gui.open()},a.prototype.initGL=function(){try{this.gl=this.canvas.getContext("experimental-webgl"),this.gl.viewport(0,0,this.canvas.width,this.canvas.height)}catch(a){}this.gl||alert("Your browser does not support WebGL"),this.gl.clearColor(0,0,0,1),this.gl.enable(this.gl.DEPTH_TEST),this.resizeGL(),this.initBuffers(),this.initShaders()},a.prototype.initQuadBuffer=function(){this.quad=new WebGLRenderObject,this.quad.positionBuffer=this.gl.createBuffer(),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.quad.positionBuffer);var a=[1,1,-1,1,1,-1,-1,-1];this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array(a),this.gl.STATIC_DRAW),this.quad.positionBuffer_itemSize=2,this.quad.positionBuffer_numItems=4,this.gl.bindBuffer(this.gl.ARRAY_BUFFER,null)},a.prototype.initMetaballsBuffer=function(){this.metaballsRenderObject=new WebGLRenderObject,this.metaballsRenderObject.positionBuffer=this.gl.createBuffer(),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.metaballsRenderObject.positionBuffer),this.gl.bufferData(this.gl.ARRAY_BUFFER,GRIDSIZE*GRIDSIZE*GRIDSIZE,this.gl.STREAM_DRAW),this.metaballsRenderObject.normalBuffer=this.gl.createBuffer(),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.metaballsRenderObject.normalBuffer),this.gl.bufferData(this.gl.ARRAY_BUFFER,GRIDSIZE*GRIDSIZE*GRIDSIZE,this.gl.STREAM_DRAW),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,null)},a.prototype.initBuffers=function(){this.initQuadBuffer(),this.initMetaballsBuffer()},a.prototype.getShader=function(a,b){var c;if("fs"===b)c=this.gl.createShader(this.gl.FRAGMENT_SHADER);else{if("vs"!==b)return alert("UNDEFINED!"),null;c=this.gl.createShader(this.gl.VERTEX_SHADER)}return this.gl.shaderSource(c,a),this.gl.compileShader(c),this.gl.getShaderParameter(c,this.gl.COMPILE_STATUS)?c:(alert("SHADER ERROR!"),alert(this.gl.getShaderInfoLog(c)),null)},a.prototype.initQuadShader=function(a,b,c){var d=this.getShader(b,"vs"),e=this.getShader(c,"fs");a.shaderProgram=this.gl.createProgram(),this.gl.attachShader(a.shaderProgram,d),this.gl.attachShader(a.shaderProgram,e),this.gl.linkProgram(a.shaderProgram),this.gl.getProgramParameter(a.shaderProgram,this.gl.LINK_STATUS)||alert("Could not initialise quad shader!"),a.vertexPositionAttribute=this.gl.getAttribLocation(a.shaderProgram,"vertex_position"),a.iResolutionUniform=this.gl.getUniformLocation(a.shaderProgram,"iResolution"),a.iGlobalTimeUniform=this.gl.getUniformLocation(a.shaderProgram,"iGlobalTime")},a.prototype.initQuadShaders=function(){this.quadSunShader=new WebGLShaderObject,this.quadSkyShader=new WebGLShaderObject,this.quadBubbleShader=new WebGLShaderObject,this.quadTunnelShader=new WebGLShaderObject,this.initQuadShader(this.quadSunShader,quadVertexShaderStr,quadSunFragmentShaderStr),this.initQuadShader(this.quadSkyShader,quadVertexShaderStr,quadSkyFragmentShaderStr),this.initQuadShader(this.quadBubbleShader,quadVertexShaderStr,quadBubbleFragmentShaderStr),this.quadShader=this.quadSunShader},a.prototype.initMetaballsShader=function(){var a=this.getShader(metaballsVertexShaderStr,"vs"),b=this.getShader(metaballsFragmentShaderStr,"fs");this.metaballsShader=new WebGLShaderObject,this.metaballsShader.shaderProgram=this.gl.createProgram(),this.gl.attachShader(this.metaballsShader.shaderProgram,a),this.gl.attachShader(this.metaballsShader.shaderProgram,b),this.gl.linkProgram(this.metaballsShader.shaderProgram),this.gl.getProgramParameter(this.metaballsShader.shaderProgram,this.gl.LINK_STATUS)||alert("Could not initialise quad shader!"),this.metaballsShader.vertexPositionAttribute=this.gl.getAttribLocation(this.metaballsShader.shaderProgram,"vertex_position"),this.metaballsShader.vertexNormalAttribute=this.gl.getAttribLocation(this.metaballsShader.shaderProgram,"vertex_normal"),this.metaballsShader.modelViewProjectionMatrixUniform=this.gl.getUniformLocation(this.metaballsShader.shaderProgram,"modelViewProjectionMatrix"),this.metaballsShader.modelViewMatrixUniform=this.gl.getUniformLocation(this.metaballsShader.shaderProgram,"modelViewMatrix"),this.metaballsShader.normalMatrixUniform=this.gl.getUniformLocation(this.metaballsShader.shaderProgram,"normalMatrix"),this.metaballsShader.envMapSamplerUniform=this.gl.getUniformLocation(this.metaballsShader.shaderProgram,"envMapUniform")},a.prototype.initShaders=function(){this.initQuadShaders(),this.initMetaballsShader()},a.prototype.resizeGL=function(){this.canvas=this.gl.canvas;var a=this.canvas.clientWidth,b=this.canvas.clientHeight;this.canvas.width==a&&this.canvas.height==b||(this.canvas.width=a,this.canvas.height=b,this.gl.viewport(0,0,this.canvas.width,this.canvas.height),mat4.perspective(45,this.canvas.width/this.canvas.height,1,1e3,this.projectionMatrix))},a.prototype.renderQuad=function(){this.resizeGL(),this.gl.clear(this.gl.COLOR_BUFFER_BIT|this.gl.DEPTH_BUFFER_BIT),this.gl.disable(this.gl.DEPTH_TEST),this.gl.useProgram(this.quadShader.shaderProgram),this.gl.enableVertexAttribArray(this.quadShader.vertexPositionAttribute),this.gl.uniform3f(this.quadShader.iResolutionUniform,this.canvas.width,this.canvas.height,0),this.gl.uniform1f(this.quadShader.iGlobalTimeUniform,(this.elapsedTime-this.timeStart)/1e3),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.quad.positionBuffer),this.gl.vertexAttribPointer(this.quadShader.vertexPositionAttribute,2,this.gl.FLOAT,!1,0,0),this.gl.drawArrays(this.gl.TRIANGLE_STRIP,0,4),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,null),this.gl.disableVertexAttribArray(this.quadShader.vertexPositionAttribute),this.gl.useProgram(null),this.gl.bindTexture(this.gl.TEXTURE_2D,null),this.gl.enable(this.gl.DEPTH_TEST)},a.prototype.renderMetaballs=function(){var a=this.elapsedTime*degToRad,b=a/30,c=Math.cos(b),d=Math.sin(b);if(this.modelViewMatrix[0]=c,this.modelViewMatrix[1]=d,this.modelViewMatrix[4]=-d,this.modelViewMatrix[5]=c,this.modelViewMatrix[14]=-2.5,mat4.multiply(this.projectionMatrix,this.modelViewMatrix,this.modelViewProjectionMatrix),mat4.toInverseMat3(this.modelViewMatrix,this.normalMatrix),mat3.transpose(this.normalMatrix),this.params.alternativeMovement){var e=this.elapsedTime/400,f=this.elapsedTime/500,g=this.elapsedTime/600,h=Math.sin(e),i=Math.cos(e),j=Math.cos(g);this.metaballs_position[3]=.4*h-.25*j,this.metaballs_position[4]=.45*i-.2*j;var k=Math.cos(f),l=Math.sin(f),m=Math.sin(g);this.metaballs_position[6]=-.4*k-.2*m,this.metaballs_position[8]=.4*l-.2*h}else{var e=this.elapsedTime/400,f=this.elapsedTime/500,g=this.elapsedTime/600,n=this.elapsedTime/700,o=.15*Math.cos(g),h=.4*Math.sin(e),i=.4*Math.cos(e),j=.2*Math.sin(e);this.metaballs_position[0]=-.3*Math.cos(n)-o,this.metaballs_position[1]=.3*Math.sin(g)-o,this.metaballs_position[3]=h+o,this.metaballs_position[4]=i-o,this.metaballs_position[6]=-i-.2*Math.sin(g),this.metaballs_position[7]=.4*Math.sin(f)-.2*Math.sin(e)}for(var p=0;p<GRIDSIZE;p++)for(var q=0;q<GRIDSIZE;q++)for(var r=0;r<GRIDSIZE;r++){var s=p+q*GRIDSIZE+r*GRIDSIZE2,t=3*s;this.grid_value[s]=0;for(var u=this.grid_position[t+0],v=this.grid_position[t+1],w=this.grid_position[t+2],x=0;x<3;x++){var y=this.metaballs_radius[x],z=y*y,A=this.metaballs_position[3*x+0],B=this.metaballs_position[3*x+1],C=this.metaballs_position[3*x+2],D=u-A,E=v-B,F=w-C;this.grid_value[s]+=z/(D*D+E*E+F*F)}}for(var G=GRIDSIZE-1,p=1;p<G;p++)for(var q=1;q<G;q++)for(var r=1;r<G;r++){var s=p+q*GRIDSIZE+r*GRIDSIZE2,t=3*s,H=p-1+q*GRIDSIZE+r*GRIDSIZE2,I=p+1+q*GRIDSIZE+r*GRIDSIZE2,J=p+(q-1)*GRIDSIZE+r*GRIDSIZE2,K=p+(q+1)*GRIDSIZE+r*GRIDSIZE2,L=p+q*GRIDSIZE+(r-1)*GRIDSIZE2,M=p+q*GRIDSIZE+(r+1)*GRIDSIZE2;this.grid_normal[t+0]=this.grid_value[H]-this.grid_value[I],this.grid_normal[t+1]=this.grid_value[J]-this.grid_value[K],this.grid_normal[t+2]=this.grid_value[L]-this.grid_value[M]}for(var N=0,p=0;p<GRIDSIZE-1;p++)for(var q=0;q<GRIDSIZE-1;q++)for(var r=0;r<GRIDSIZE-1;r++){var O=p+q*GRIDSIZE+r*GRIDSIZE2,t=p+q*GRIDSIZE+(r+1)*GRIDSIZE2,P=p+(q+1)*GRIDSIZE+r*GRIDSIZE2,Q=p+(q+1)*GRIDSIZE+(r+1)*GRIDSIZE2,R=p+1+q*GRIDSIZE+r*GRIDSIZE2,S=p+1+q*GRIDSIZE+(r+1)*GRIDSIZE2,T=p+1+(q+1)*GRIDSIZE+r*GRIDSIZE2,U=p+1+(q+1)*GRIDSIZE+(r+1)*GRIDSIZE2,V=0,W=this.grid_value[O],X=this.grid_value[t],Y=this.grid_value[P],Z=this.grid_value[Q],$=this.grid_value[R],_=this.grid_value[S],aa=this.grid_value[T],ba=this.grid_value[U];W<1&&(V|=1),$<1&&(V|=2),_<1&&(V|=4),X<1&&(V|=8),Y<1&&(V|=16),aa<1&&(V|=32),ba<1&&(V|=64),Z<1&&(V|=128);var ca=edgeTable[V];if(0!==ca&&255!==ca){0!==(1&ca)&&this.interpolate(O,R,0),0!==(2&ca)&&this.interpolate(R,S,1),0!==(4&ca)&&this.interpolate(S,t,2),0!==(8&ca)&&this.interpolate(t,O,3),0!==(16&ca)&&this.interpolate(P,T,4),0!==(32&ca)&&this.interpolate(T,U,5),0!==(64&ca)&&this.interpolate(U,Q,6),0!==(128&ca)&&this.interpolate(Q,P,7),0!==(256&ca)&&this.interpolate(O,P,8),0!==(512&ca)&&this.interpolate(R,T,9),0!==(1024&ca)&&this.interpolate(S,U,10),0!==(2048&ca)&&this.interpolate(t,Q,11);for(var da=numEntryTable[V],x=0;x<da;x++){var ea=3*triangleTable[x+16*V]+0,fa=3*triangleTable[x+16*V]+1,ga=3*triangleTable[x+16*V]+2,ha=this.verticesList[ea],ia=this.verticesList[fa],ja=this.verticesList[ga],ka=this.normalsList[ea],la=this.normalsList[fa],ma=this.normalsList[ga],na=N+0,oa=N+1,pa=N+2;this.vertdata[na]=ha,this.vertdata[oa]=ia,this.vertdata[pa]=ja,this.normdata[na]=ka,this.normdata[oa]=la,this.normdata[pa]=ma,N+=3}}}this.gl.useProgram(this.metaballsShader.shaderProgram),this.gl.enableVertexAttribArray(this.metaballsShader.vertexPositionAttribute),this.gl.enableVertexAttribArray(this.metaballsShader.vertexNormalAttribute),this.gl.activeTexture(this.gl.TEXTURE0),this.gl.bindTexture(this.gl.TEXTURE_2D,this.textureID[this.textureNum]),this.gl.uniformMatrix4fv(this.metaballsShader.modelViewProjectionMatrixUniform,!1,this.modelViewProjectionMatrix),this.gl.uniformMatrix4fv(this.metaballsShader.modelViewMatrixUniform,!1,this.modelViewMatrix),this.gl.uniformMatrix3fv(this.metaballsShader.normalMatrixUniform,!1,this.normalMatrix),this.gl.uniform1i(this.metaballsShader.envMapSamplerUniform,0),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.metaballsRenderObject.positionBuffer),this.gl.vertexAttribPointer(this.metaballsShader.vertexPositionAttribute,3,this.gl.FLOAT,!1,0,0),this.gl.bufferData(this.gl.ARRAY_BUFFER,this.vertdata,this.gl.STREAM_DRAW),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.metaballsRenderObject.normalBuffer),this.gl.vertexAttribPointer(this.metaballsShader.vertexNormalAttribute,3,this.gl.FLOAT,!1,0,0),this.gl.bufferData(this.gl.ARRAY_BUFFER,this.normdata,this.gl.STREAM_DRAW),this.gl.drawArrays(this.gl.TRIANGLES,0,N/3),this.gl.disableVertexAttribArray(this.metaballsShader.vertexPositionAttribute),this.gl.disableVertexAttribArray(this.metaballsShader.vertexNormalAttribute),this.gl.useProgram(null),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,null),this.gl.bindTexture(this.gl.TEXTURE_2D,null)},a.prototype.loadImage=function(a,b){var c=new Image;return c.src=a,c.onload=b,c},a.prototype.loadTextures=function(a,b){for(var c=a.length,d=function(){--c,0==c&&b()},e=0;e<c;++e){var f=this.loadImage(a[e],d);this.images.push(f)}},a.prototype.createTextures=function(){for(var a=this.images.length,b=0;b<a;b++)this.textureID[b]=this.gl.createTexture(),this.gl.bindTexture(this.gl.TEXTURE_2D,this.textureID[b]),this.gl.pixelStorei(this.gl.UNPACK_FLIP_Y_WEBGL,1),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_MAG_FILTER,this.gl.LINEAR),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_MIN_FILTER,this.gl.LINEAR),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_WRAP_S,this.gl.CLAMP_TO_EDGE),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_WRAP_T,this.gl.CLAMP_TO_EDGE),this.gl.texImage2D(this.gl.TEXTURE_2D,0,this.gl.RGBA,this.gl.RGBA,this.gl.UNSIGNED_BYTE,this.images[b]),this.gl.bindTexture(this.gl.TEXTURE_2D,null)},a.prototype.initGrid=function(){for(var a=0;a<GRIDSIZE;a++)for(var b=0;b<GRIDSIZE;b++)for(var c=0;c<GRIDSIZE;c++){
var d=2*a/GRIDSIZE-1,e=2*b/GRIDSIZE-1,f=-2*c/GRIDSIZE+1,g=a+b*GRIDSIZE+c*GRIDSIZE2,h=3*g,i=h+0,j=h+1,k=h+2;this.grid_position[i]=d,this.grid_position[j]=e,this.grid_position[k]=f,this.grid_normal[i]=0,this.grid_normal[j]=0,this.grid_normal[k]=0,this.grid_value[g]=0}},a.prototype.initLists=function(){for(var a=0;a<35;a++)this.verticesList[a]=0,this.normalsList[a]=0},a.prototype.interpolate=function(a,b,c){var d=3*a,e=d+0,f=d+1,g=d+2,h=3*b,i=h+0,j=h+1,k=h+2,l=3*c,m=l+0,n=l+1,o=l+2,p=this.grid_value[a],q=this.grid_value[b],r=this.grid_position[e],s=this.grid_position[f],t=this.grid_position[g],u=this.grid_position[i],v=this.grid_position[j],w=this.grid_position[k],x=this.grid_normal[e],y=this.grid_normal[f],z=this.grid_normal[g],A=this.grid_normal[i],B=this.grid_normal[j],C=this.grid_normal[k];if(1===Math.abs(p))this.verticesList[m]=r,this.verticesList[n]=s,this.verticesList[o]=t,this.normalsList[m]=x,this.normalsList[n]=y,this.normalsList[o]=z;else if(1===Math.abs(q))this.verticesList[m]=u,this.verticesList[n]=v,this.verticesList[o]=w,this.normalsList[m]=A,this.normalsList[n]=B,this.normalsList[o]=C;else if(p===q)this.verticesList[m]=r,this.verticesList[n]=s,this.verticesList[o]=t,this.normalsList[m]=x,this.normalsList[n]=y,this.normalsList[o]=z;else{var D=(1-p)/(q-p);this.verticesList[m]=r+D*(u-r),this.verticesList[n]=s+D*(v-s),this.verticesList[o]=t+D*(w-t),this.normalsList[m]=x+D*(A-x),this.normalsList[n]=y+D*(B-y),this.normalsList[o]=z+D*(C-z)}},a.prototype.onWindowResize=function(){this.resizeGL()},a.prototype.drawScene=function(){this.params.backgroundShader&&this.renderQuad(),this.renderMetaballs()},a.prototype.animate=function(){var a=this.elapsedTime;this.elapsedTime=performance.now(),this.elapsedTime=(a+this.elapsedTime)/2},a.prototype.tick=function(){var a=this;window.requestAnimationFrame(function(){return a.tick()}),this.drawScene(),this.animate()},a.prototype.start=function(){var a=this;this.createTextures(),window.addEventListener("resize",function(){return a.onWindowResize()},!1),this.tick()},a}();window.onload=function(){new WebGLApp};
